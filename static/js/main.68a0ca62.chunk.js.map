{"version":3,"sources":["components/UploadImage.js","components/ResizeSetting.js","components/DownloadButton.js","Main/index.js","BasicLayout/index.js","App.js","reportWebVitals.js","index.js"],"names":["ExportComponent","props","setOriginFiles","useState","previewImage","setPreviewImage","previewVisible","setPreviewVisible","previewTitle","setPreviewTitle","fileList","setFileList","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","handlePreview","a","url","preview","originFileObj","name","substring","lastIndexOf","uploadButton","PlusOutlined","style","marginTop","listType","multiple","customRequest","onPreview","onChange","info","customInfo","status","originFiles","forEach","push","showUploadList","showPreviewIcon","showRemoveIcon","showDownloadIcon","visible","title","footer","onCancel","alt","width","src","resizeSetting","setResizeSetting","maxWidth","maxHeight","quality","onFormChange","params","labelCol","span","wrapperCol","layout","Item","label","min","max","defaultValue","value","compressFormat","rotation","outputType","resizeFile","Resizer","imageFileResizer","onDownloadFile","image","element","document","createElement","window","URL","createObjectURL","filename","href","download","click","revokeObjectURL","console","log","onClick","Array","from","f","Content","colLayout","xs","sm","md","gutter","UploadImage","ResizeSetting","DownloadButton","BasicLayout","isMobileScreen","innerWidth","Header","position","zIndex","className","padding","margin","minHeight","Footer","textAlign","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.68a0ca62.chunk.js","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\r\nimport {\r\n  Upload,\r\n  Modal,\r\n} from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nfunction ExportComponent(props) {\r\n  const { setOriginFiles } = props\r\n\r\n  const [previewImage, setPreviewImage] = useState(false)\r\n  const [previewVisible, setPreviewVisible] = useState('')\r\n  const [previewTitle, setPreviewTitle] = useState('')\r\n  const [fileList, setFileList] = useState([])\r\n\r\n  const getBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = error => reject(error);\r\n    });\r\n  }\r\n\r\n  const handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    setPreviewImage(file.url || file.preview)\r\n    setPreviewVisible(true)\r\n    setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1))\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setPreviewVisible(false)\r\n  }\r\n\r\n  const handleChange = (info) => {\r\n    const customInfo = info\r\n    customInfo.file.status = 'done'\r\n\r\n    const originFiles = []\r\n    customInfo.fileList.forEach(({ originFileObj }) => {\r\n      originFiles.push(originFileObj)\r\n    })\r\n\r\n    setFileList(customInfo.fileList)\r\n    setOriginFiles(originFiles)\r\n  }\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      <PlusOutlined />\r\n      <div style={{ marginTop: 8 }}>Upload</div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Upload\r\n        listType=\"picture-card\"\r\n        fileList={fileList}\r\n        multiple\r\n        customRequest={() => {}}\r\n        onPreview={handlePreview}\r\n        onChange={handleChange}\r\n        showUploadList={{\r\n          showPreviewIcon: true,\r\n          showRemoveIcon: true,\r\n          showDownloadIcon: false,\r\n        }}\r\n      >\r\n        {uploadButton}\r\n      </Upload>\r\n      <Modal\r\n        visible={previewVisible}\r\n        title={previewTitle}\r\n        footer={null}\r\n        onCancel={handleCancel}\r\n      >\r\n        <img alt={previewTitle} style={{ width: '100%' }} src={previewImage} />\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ExportComponent;\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  InputNumber,\r\n} from 'antd';\r\n\r\nfunction ExportComponent(props) {\r\n  const { resizeSetting, setResizeSetting } = props\r\n  const {\r\n    maxWidth,\r\n    maxHeight,\r\n    quality,\r\n  } = resizeSetting\r\n\r\n  const onFormChange = (params) => {\r\n    setResizeSetting({\r\n      ...resizeSetting,\r\n      ...params,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        labelCol={{\r\n          span: 12,\r\n        }}\r\n        wrapperCol={{\r\n          span: 8,\r\n        }}\r\n        layout=\"horizontal\"\r\n      >\r\n        <Form.Item label=\"寬(width)\">\r\n          <InputNumber\r\n            min={1}\r\n            max={16384}\r\n            defaultValue={maxWidth}\r\n            onChange={(value) => onFormChange({ maxWidth: value })}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"高(height)\">\r\n          <InputNumber\r\n            min={1}\r\n            max={16384}\r\n            defaultValue={maxHeight}\r\n            onChange={(value) => onFormChange({ maxHeight: value })}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"品質(quality)\">\r\n          <InputNumber\r\n            min={1}\r\n            max={100}\r\n            defaultValue={quality}\r\n            onChange={(value) => onFormChange({ quality: value })}\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ExportComponent;\r\n","import React from 'react';\r\nimport Resizer from \"react-image-file-resizer\";\r\nimport {\r\n  Button,\r\n} from 'antd';\r\n\r\nfunction ExportComponent(props) {\r\n  const { originFiles } = props\r\n  const { resizeSetting } = props\r\n  const {\r\n    maxWidth,\r\n    maxHeight,\r\n    quality,\r\n    compressFormat,\r\n    rotation,\r\n    outputType,\r\n  } = resizeSetting\r\n\r\n  // const [isLoading, setIsLoading] = useState(false)\r\n\r\n  const resizeFile = (file) => {\r\n    return new Promise((resolve) => {\r\n      const responseUriFunc = (resizeFile) => {\r\n        resolve(resizeFile)\r\n      }\r\n\r\n      Resizer.imageFileResizer(\r\n        file,\r\n        maxWidth,\r\n        maxHeight,\r\n        compressFormat,\r\n        quality,\r\n        rotation,\r\n        responseUriFunc,\r\n        outputType,\r\n        // minWidth,\r\n        // minHeight,\r\n      );\r\n    })\r\n  }\r\n\r\n  const onDownloadFile = async (file) => {\r\n    try {\r\n      const image = await resizeFile(file);\r\n\r\n      const element = document.createElement('a');\r\n      const url = window.URL.createObjectURL(image);\r\n      const filename = image.name;\r\n      element.href = url;\r\n      element.download = filename;\r\n      element.click();\r\n      window.URL.revokeObjectURL(url);\r\n    } catch (err) {\r\n      console.log('err', err);\r\n    }\r\n  };\r\n\r\n  const onClickButton =  () => {\r\n    // setIsLoading(true)\r\n    const fileArr = Array.from(originFiles)\r\n    fileArr.forEach((f) => onDownloadFile(f))\r\n    // setIsLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        onClick={onClickButton}\r\n      >\r\n        進行壓縮並下載\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ExportComponent;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Card,\r\n  Row,\r\n  Col,\r\n} from 'antd';\r\nimport UploadImage from '../components/UploadImage'\r\nimport ResizeSetting from '../components/ResizeSetting'\r\nimport DownloadButton from '../components/DownloadButton'\r\n\r\nimport './index.css'\r\n\r\nfunction Content() {\r\n\r\n  const defaultResizeSetting = {\r\n    maxWidth: 1920,\r\n    maxHeight: 1920,\r\n    quality: 75,\r\n    compressFormat: 'JPEG',\r\n    rotation: 0,\r\n    outputType: 'file',\r\n  }\r\n  const [originFiles, setOriginFiles] = useState([])\r\n  const [resizeSetting, setResizeSetting] = useState(defaultResizeSetting)\r\n\r\n  const colLayout = {\r\n    xs: 24,\r\n    sm: 24,\r\n    md: 8,\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Row gutter={[16, 16]}>\r\n        <Col {...colLayout}>\r\n          <Card title=\"上傳檔案\">\r\n            <UploadImage\r\n              setOriginFiles={setOriginFiles}\r\n            />\r\n          </Card>\r\n        </Col>\r\n        <Col {...colLayout}>\r\n          <Card title=\"壓縮設定\">\r\n            <ResizeSetting\r\n              originFiles={originFiles}\r\n              setOriginFiles={setOriginFiles}\r\n              resizeSetting={resizeSetting}\r\n              setResizeSetting={setResizeSetting}\r\n            />\r\n          </Card>\r\n        </Col>\r\n        <Col {...colLayout}>\r\n          <Card title=\"下載壓縮檔案\">\r\n            <DownloadButton\r\n              originFiles={originFiles}\r\n              resizeSetting={resizeSetting}\r\n            />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={[16, 16]}>\r\n        <Col span={24}>\r\n          <span>\r\n            本專案使用 <a href='https://github.com/onurzorluer/react-image-file-resizer'>react-image-file-resizer</a> 作為圖片壓縮的套件\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Content;\r\n","import React, { Component } from 'react'\r\nimport 'antd/dist/antd.css'\r\nimport {\r\n  Layout,\r\n  Breadcrumb,\r\n} from 'antd'\r\n\r\nimport Main from '../Main/index'\r\n\r\nimport './index.css';\r\n\r\nclass BasicLayout extends Component {\r\n\r\n  render() {\r\n    const screenWidth = window.innerWidth\r\n    const isMobileScreen = screenWidth <= 576\r\n\r\n    return (\r\n      <Layout>\r\n        <Layout.Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\r\n          <div className=\"logo\" />\r\n          {/* <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n            <Menu.Item key=\"1\">首頁</Menu.Item>\r\n            <Menu.Item key=\"2\">nav 2</Menu.Item>\r\n            <Menu.Item key=\"3\">nav 3</Menu.Item>\r\n          </Menu> */}\r\n        </Layout.Header>\r\n        <Layout.Content\r\n          className=\"site-layout\"\r\n          style={isMobileScreen ? { padding: '0 15px', marginTop: 64 } : { padding: '0 50px', marginTop: 64 }}\r\n        >\r\n          <Breadcrumb style={{ margin: '16px 0' }}>\r\n            {/* <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n            <Breadcrumb.Item>List</Breadcrumb.Item>\r\n            <Breadcrumb.Item>App</Breadcrumb.Item> */}\r\n          </Breadcrumb>\r\n          <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 800 }}>\r\n            <Main />\r\n          </div>\r\n        </Layout.Content>\r\n        <Layout.Footer style={{ textAlign: 'center' }}>Produced by christmai ©2021</Layout.Footer>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BasicLayout;\r\n","import BasicLayout from \"./BasicLayout/index\"\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <BasicLayout />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}